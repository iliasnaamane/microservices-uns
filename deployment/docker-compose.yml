version: '2'

services:
  database:
    image: mongo
    container_name: tcs-database
    volumes:
      - "./mongo_data:/data/db"
    environment:
      - MONGODB_DATABASE=BusinessTravelDB
    ports:
      - "27017:27017"
  cars:
    container_name: tcs-cars
    image: soa-team-2/cars
    ports:
      - "9090:9060"  
  hotels:
    container_name: tcs-hotel-rpc
    image: soa-team-1/hotels
    ports:
      - "8003:8080"
  hotel-rpc:                
    container_name: hotel-rpc
    image: result/hotel-rpc
    ports:
      - "9010:8080"

  car-rpc:
    container_name: car-rpc
    image: result/car-rpc
    ports:
      - "9020:8080"
  vols-document:
    container_name: vols-document
    image: result/document-vol
    ports:
      - "9030:8080"
  tcs-businesstravel-service:
    command: npm start
    container_name: businesstravel-resource
    image: result/businesstravel-resource
    ports:
      - "9040:8080"
    links:
      - database
    environment:
      - MONGODB_ADDRESS=database
  
  flightreservation-registry:               # Flight reservation registry, on port 9080
    container_name: flightreservation
    image: matthieugenovese/flightreservation-document
    depends_on:
      - database
    ports:
     - "9080:8080"

  integration-bus:  # To attach to this container at runtime: docker exec -it tcs-bus sh
    container_name: tcs-bus
    image: petitroll/tcs-bus
    volumes:
      - "../integration/input:/servicemix/camel/input"
      - "../integration/output:/servicemix/camel/output"
    #depends_on:
    #  - flightreservation-registry
    #  - database
    #  - tcs-businesstravel-service
    #  - vols-document
    #  - car-rpc
    #  - hotel-rpc
    #  - hotels
    #  - cars
    ports:
      - "8181:8181"
      - "8101:8101"
      - "1099:1099"
      - "61616:61616"
      - "44444:44444"

 
